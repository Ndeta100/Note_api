# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Note app build

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: |
          mvn -B package --file pom.xml
          mkdir staging && cp target/*.jar staging
      - name: What is in the target folder
        run: |   
          cd target
          ls -a
#          Speed up build
      - name: Set up cache for maven
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key:  ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name:  Persist workflow data as artifact
        uses: actions/upload-artifact@v2
        with:
          name: note-api-artifact
          path: staging
  release-api:
    name: note-api-release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifact
        uses: actions/download-artifacts@v3
        with:
          name: note-api
      - name: Test artifact download
        run: ls -R
      - name: archive content
        uses: thedoctor0/zip-release@master
        with:
          filename: note-api.zip
      - name: create a release
        id: create-new-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
      - name: upload release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-new-release.outputs.upload_url }}
          asset_path: ./note-api.zip
          asset_name: note-api-v${{ github.run_number }}.zip
          asset_content_type: application/zip